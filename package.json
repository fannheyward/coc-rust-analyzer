{
  "name": "coc-rust-analyzer",
  "version": "0.0.11",
  "description": "rust-analyzer extension for coc.nvim",
  "author": "Heyward Fann <fannheyward@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/fannheyward/coc-rust-analyzer.git"
  },
  "engines": {
    "coc": "^0.0.70"
  },
  "activationEvents": [
    "onLanguage:rust",
    "workspaceContains:**/Cargo.toml"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "watch": "webpack --watch",
    "build": "webpack && shx cp src/utils/terminateProcess.sh lib/terminateProcess.sh",
    "prepare": "npx npm-run-all clean build"
  },
  "devDependencies": {
    "@types/node": "^12.7.1",
    "@types/which": "^1.3.1",
    "coc.nvim": "^0.0.73",
    "rimraf": "^3.0.0",
    "shx": "^0.3.2",
    "ts-loader": "^6.0.4",
    "typescript": "^3.6.2",
    "vscode-languageserver-protocol": "3.15.0-next.9",
    "webpack": "^4.39.2",
    "webpack-cli": "^3.3.6",
    "which": "^2.0.1"
  },
  "prettier": {
    "singleQuote": true,
    "printWidth": 180,
    "semi": true
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-rust-analyzer configuration",
      "properties": {
        "rust-analyzer.featureFlags": {
          "type": "object",
          "default": {},
          "description": "Fine grained feature flags to disable annoying features"
        },
        "rust-analyzer.raLspServerPath": {
          "type": [
            "string"
          ],
          "default": "ra_lsp_server",
          "description": "Path to ra_lsp_server executable"
        },
        "rust-analyzer.enableCargoWatchOnStartup": {
          "type": "string",
          "default": "ask",
          "enum": [
            "ask",
            "enabled",
            "disabled"
          ],
          "enumDescriptions": [
            "Asks each time whether to run `cargo watch`",
            "`cargo watch` is always started",
            "Don't start `cargo watch`"
          ],
          "description": "Whether to run `cargo watch` on startup"
        },
        "rust-analyzer.excludeGlobs": {
          "type": "array",
          "default": [],
          "description": "Paths to exclude from analysis"
        },
        "rust-analyzer.useClientWatching": {
          "type": "boolean",
          "default": false,
          "description": "client provided file watching instead of notify watching."
        },
        "rust-analyzer.cargo-watch.arguments": {
          "type": "string",
          "description": "`cargo-watch` arguments. (e.g: `--features=\"shumway,pdf\"` will run as `cargo watch -x \"check --features=\"shumway,pdf\"\"` )",
          "default": ""
        },
        "rust-analyzer.cargo-watch.command": {
          "type": "string",
          "description": "`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )",
          "default": "check"
        },
        "rust-analyzer.trace.server": {
          "type": "string",
          "scope": "window",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "enumDescriptions": [
            "No traces",
            "Error only",
            "Full log"
          ],
          "default": "off",
          "description": "Trace requests to the ra_lsp_server"
        },
        "rust-analyzer.trace.cargo-watch": {
          "type": "string",
          "scope": "window",
          "enum": [
            "off",
            "error",
            "verbose"
          ],
          "default": "off",
          "description": "Trace output of cargo-watch"
        },
        "rust-analyzer.lruCapacity": {
          "type": "number",
          "default": null,
          "description": "Number of syntax trees rust-analyzer keeps in memory"
        }
      }
    },
    "commands": [
      {
        "command": "rust-analyzer.analyzerStatus",
        "title": "Status",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.applySourceChange",
        "title": "Apply source change",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.collectGarbage",
        "title": "Run garbage collection",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.joinLines",
        "title": "Join lines",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.matchingBrace",
        "title": "Find matching brace",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.parentModule",
        "title": "Locate parent module",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.reload",
        "title": "Restart server",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.run",
        "title": "Run",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.runSingle",
        "title": "Run Single",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.startCargoWatch",
        "title": "Start Cargo Watch",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.stopCargoWatch",
        "title": "Stop Cargo Watch",
        "category": "Rust Analyzer"
      },
      {
        "command": "rust-analyzer.syntaxTree",
        "title": "Show Syntax Tree",
        "category": "Rust Analyzer"
      }
    ]
  }
}
